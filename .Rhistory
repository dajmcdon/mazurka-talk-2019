xaringan:::inf_mr()
?plotmath
xaringan:::inf_mr()
rep(1:2,each=1:2)
rep(1:2,times=1:2)
fivecolors = viridis(5, option='plasma',begin=.2)[c(1,4,2,5,3)] #brewer.pal(5,'Set1')[c(2,1,3,5,4)]
library(dpf)
library(knitr)
library(splines)
library(gplots)
library(tidyverse)
library(heatmaply)
library(RColorBrewer)
library(dendextend)
green = '#00884E'
blue = '#053B64'
red = '#FF4900'
orange = '#FF9200'
db = "#053B64"
opts_chunk$set(message=FALSE, warning=FALSE, cache=TRUE,
autodep = TRUE, echo=FALSE,
#out.width ="6in",out.height="3in",
dev="svg",
fig.path = 'gfx/',
fig.width = 12, fig.height = 5,
fig.align = 'center')
load("../../Manuscripts/Chopin Mazurka/dpf/extras/mazurkaResults.Rdata")
source("../../Manuscripts/Chopin Mazurka/dpf/manuscript/dirichlet_precision.R")
pvec_ml = pvec_ml %>% select(-value,-fevals,-gevals,-convergence) %>%
data.matrix %>% data.frame
# remove Block
# bad = which(rownames(pvec_ml)=="Block_1995")
# pvec_ml = pvec_ml[-bad,]
#theme_set(theme_minimal(base_size=15,base_family="Times"))
data(tempos)
lt = diff(c(tempos$note.onset,61))
fivecolors = viridis(5, option='plasma',begin=.2)[c(1,4,2,5,3)] #brewer.pal(5,'Set1')[c(2,1,3,5,4)]
blues = viridis_pal()(4)
blues
xaringan:::inf_mr()
stree <- create_graph() %>%
add_balanced_tree(
k = 3,
h = 3,
type = "tertiary")
stree
?visnetwork
library(visNetwork)
visDocumentation()
?visOptions
render_graph(stree,layout = 'visNetwork') %>% visOptions(highlightNearest = TRUE)
visNetwork(stree$nodes_df,stree$edges_df) %>% visOptions(highlightNearest = TRUE)
stree$edges_df$arrows="to"
visNetwork(stree$nodes_df,stree$edges_df) %>% visOptions(highlightNearest = TRUE)
visNetwork(stree$nodes_df,stree$edges_df) %>%
visOptions(highlightNearest = TRUE) %>%
visHierarchicalLayout()
stree <- create_graph() %>%
add_balanced_tree(
k = 2,
h = 4,
type = "tertiary") %>%
set_node_attr_to_display()
visNetwork(stree$nodes_df,stree$edges_df) %>%
visEdges(arrows = "to") %>%
visOptions(highlightNearest = TRUE) %>%
visHierarchicalLayout()
vignette("visnetwork")
vignette(package="visnetwork")
vignette(package="visNetwork")
vignette(package="visNetwork", "Introduction-to-visNetwork")
visNetwork(stree$nodes_df,stree$edges_df) %>%
visEdges(arrows = "to") %>%
visOptions(highlightNearest = list(enabled=TRUE,degree=3)) %>%
visHierarchicalLayout()
visNetwork(stree$nodes_df,stree$edges_df) %>%
visEdges(arrows = "to") %>%
visOptions(highlightNearest = list(enabled=TRUE,degree=3,algorithm="hierarchical")) %>%
visHierarchicalLayout()
visNetwork(stree$nodes_df,stree$edges_df) %>%
visEdges(arrows = "to") %>%
visOptions(highlightNearest = list(enabled=TRUE,degree=list(to=0,from=4),algorithm="hierarchical")) %>%
visHierarchicalLayout()
visNetwork(stree$nodes_df,stree$edges_df) %>%
visEdges(arrows = "to") %>%
visOptions(highlightNearest = list(enabled=TRUE,degree=list(to=4,from=0),algorithm="hierarchical")) %>%
visHierarchicalLayout()
rep(1:7,times=2)
rep(1:7,each=2)
tnodes = data.frame(id=1:15,group=c(1,2,2,3,3,3,3,4,4,4,4,4,4,4,4))
tedges = data.frame(from=rep(1:7,each=2),to=c(2:15))
visNetwork(tnodes,tedges) %>%
visEdges(arrows = "to") %>%
visOptions(highlightNearest = list(enabled=TRUE,degree=list(to=4,from=0),algorithm="hierarchical")) %>%
visHierarchicalLayout()
tnodes = data.frame(id=1:15,group=c(1,2,2,3,3,3,3,4,4,4,4,4,4,4,4),label="")
tedges = data.frame(from=rep(1:7,each=2),to=c(2:15))
visNetwork(tnodes,tedges) %>%
visEdges(arrows = "to") %>%
visOptions(highlightNearest = list(enabled=TRUE,degree=list(to=4,from=0),algorithm="hierarchical")) %>%
visHierarchicalLayout()
xaringan:::inf_mr()
xaringan:::inf_mr()
servr::daemon_stop(3)
xaringan:::inf_mr()
servr::daemon_stop(1)
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
?theme
?element_rect
?scale_discrete_manual
ggplot(tempos, aes(x=note_onset, y=Rubinstein_1961)) +
geom_line(color=red,size=3) + ylab('tempo (bpm)') + xlab('measure') +
scale_x_continuous(breaks=1:4*2) +
#geom_vline(xintercept = c(1,8.9,9)) +
th +
coord_cartesian(xlim=c(1,9),expand = FALSE) +
geom_hline(yintercept = 132, linetype='dashed',size=2,color=db)
?viridis
n = 200
image(
1:n, 1, as.matrix(1:n),
col = viridis(n, option = "D"),
xlab = "viridis n", ylab = "", xaxt = "n", yaxt = "n", bty = "n"
)
length(unique(choices))
ddd <- function(ncandidates, nchoosers, nchoices){
cand = 1:ncandidates
choices = replicate(nchoosers, sample(cand, nchoices))
length(unique(choices))
}
ddd(50)
ddd(50,10,5)
ddd(50,10,3)
ddd(50,10,3)
ddd(50,10,3)
ddd(50,10,3)
ddd(50,10,3)
replicate(10,sample(1:50,3))
replicate(10,sample(1:50,3))
replicate(10,sample(1:50,3))
length(unique(replicate(10,sample(1:50,3))))
length(unique(replicate(10,sample(1:50,3))))
length(unique(replicate(10,sample(1:50,3))))
length(unique(replicate(10,sample(1:50,3))))
length(unique(replicate(10,sample(1:50,10))))
length(unique(replicate(10,sample(1:50,10))))
unique(replicate(10,sample(1:50,10)))
unique(c(replicate(10,sample(1:50,10))))
length(unique(c(replicate(10,sample(1:50,10)))))
length(unique(c(replicate(10,sample(1:50,10)))))
length(unique(c(replicate(10,sample(1:50,10)))))
length(unique(c(replicate(10,sample(1:50,10)))))
ddd <- function(ncandidates, nchoosers, nchoices){
cand = 1:ncandidates
choices = replicate(nchoosers, sample(cand, nchoices))
length(unique(c(choices)))
}
ddd(63,7,5)
ddd(63,7,5)
ddd(63,7,5)
ddd(63,7,5)
res = replicate(1000,63,10,5)
res = replicate(1000,ddd(63,10,5))
hist(res)
res = replicate(1000,ddd(63,10,3))
hist(res)
ddd <- function(ncandidates, nchoosers, nchoices, prob=NULL){
cand = 1:ncandidates
if(is.null(prob)){
choices = replicate(nchoosers, sample(cand, nchoices))
}else{
choices = replicate(nchoosers, sample(cand, nchoices,prob = prob))
}
length(unique(c(choices)))
}
p = c(30,20,20,10,10,10,rep(5,4),rep(1,50))
res = replicate(1000,ddd(60,10,3,p))
hist(res)
res = replicate(1000,ddd(60,10,5,p))
hist(res)
p = p/sum(p)
res = replicate(1000,ddd(60,10,5,p))
hist(res)
p = c(rep(10,10),rep(1,50))
res = replicate(1000,ddd(60,10,5,p))
hist(res)
res = replicate(1000,ddd(60,7,5,p))
hist(res)
p = p/sum(p)
res = replicate(1000,ddd(60,7,5,p))
hist(res)
blues
perfcols
plot(1:4,1:4,col=perfcols,cex=4)
plot(1:4,1:4,col=perfcols,cex=4,pch=19)
plot(1:4,1:4,col=viridis_pal()(4),cex=4,pch=19)
plot(1:4,1:4,col=viridis_pal(begin=.4)(4),cex=4,pch=19)
plot(1:4,1:4,col=viridis_pal()(4),cex=4,pch=19)
plot(1:4,1:4,col=viridis_pal(end = .8)(4),cex=4,pch=19)
plot(1:4,1:4,col=viridis_pal(end = .9)(4),cex=4,pch=19)
plot(1:4,1:4,col=viridis_pal(end = .9)(5),cex=4,pch=19)
plot(1:5,1:5,col=viridis_pal(end = .9)(5),cex=4,pch=19)
plot(1:5,1:5,col=viridis_pal(end = .9)(4),cex=4,pch=19)
?scale_shape_discrete
df_shapes <- data.frame(shape = 0:24)
ggplot(df_shapes, aes(0, 0, shape = shape)) +
geom_point(aes(shape = shape), size = 5, fill = 'red') +
scale_shape_identity() +
facet_wrap(~shape) +
theme_void()
perfcols
perfcols = viridis_pal(begin=.2)(nlevels(plots$state))
?heatmap.2
ttt = pvec_all %>% gather(key='parameter',value='value')
library(tidyverse)
xaringan:::inf_mr()
xaringan:::inf_mr()
library(shiny)
library(dpf)
library(knitr)
library(tidyverse)
library(RColorBrewer)
library(viridis)
green = '#00884E'
blue = '#053B64'
red = '#FF4900'
orange = '#FF9200'
db = "#053B64"
load("../../Manuscripts/Chopin Mazurka/dpf/extras/mazurkaResults.Rdata")
source("../../Manuscripts/Chopin Mazurka/dpf/manuscript/dirichlet_precision.R")
pvec_ml = pvec_ml %>% select(-value,-fevals,-gevals,-convergence) %>%
data.matrix %>% data.frame
th = theme_minimal(base_size = 24,base_family = "Times") +
theme(axis.text=element_text(color = db),
legend.title = element_blank(),
legend.position = 'bottom',
plot.title=element_text(color = db),
strip.text = element_text(hjust=0,color=db),
text = element_text(color = db))
#theme_set(theme_minimal(base_size=15,base_family="Times"))
data(tempos)
lt = diff(c(tempos$note_onset,61))
performers = gsub('_',' ',rownames(pvec_ml))
rownames(pvec_ml) = performers
temp = tempos
colnames(temp)[-c(1:3)] = performers
perfshapes = 15:18
perfcols = viridis_pal(begin=.2)(4)
?gather
?pivot_longer
names(temp)
tt = temp %>% select(-meas_num, -beat) %>%
pivot_longer(-note_onset)
tt
Dmats
hc_parm = pvec_ml %>% Dmats %>% Reduce(f='+')
hc_parm %>% as_tibble(rownames = performers)
rownames(hc_parm) <- colnames(hc_parm) <- performers
hc_parm[1:5,1:5]
hc_parm %>% as_tibble()
?as_tibble
hc_parm %>% as_tibble(rownames = "performer")
hc_parm = hc_parm %>% as_tibble(rownames = "performer") %>%
pivot_longer(-performer)
hc_parm
?lower.tri
subs = as.vector(lower.tri(matrix(NA,length(performers),length(performers))))
subs = as.vector(lower.tri(matrix(NA,length(performers),length(performers)),diag = TRUE))
hc_parm = hc_parm[subs,]
ggplot(hc_parm, aes(x=value)) + geom_density(fill=green,alpha=.6) +
geom_rug() + th
ggplot(hc_parm, aes(x=value)) + geom_density(fill=green,alpha=.6) +
geom_rug() + th + xlab('parameter distance') +
geom_vline(xintercept = 1.5,color=db)
ggplot(hc_parm, aes(x=value)) + geom_density(fill=green,alpha=.6) +
geom_rug() + th + xlab('parameter distance') +
geom_vline(xintercept = 1.5,color=db,width=2)
ggplot(hc_parm, aes(x=value)) + geom_density(fill=green,alpha=.6) +
geom_rug() + th + xlab('parameter distance') +
geom_vline(xintercept = 1.5,color=db,size=2)
hc_parm
View(th)
tt
hc_parm = pvec_ml %>% Dmats %>% Reduce(f='+')
rownames(hc_parm) <- colnames(hc_parm) <- performers
dend_parm = hc_parm %>% as.dist %>% hclust %>% as.dendrogram
hc_parm = hc_parm %>% as_tibble(rownames = "performer") %>%
pivot_longer(-performer)
othercut = .35
subs = apply(hc_parm,1,quantile,probs=4/46) < othercut
hc_parm = pvec_ml %>% Dmats %>% Reduce(f='+')
rownames(hc_parm) <- colnames(hc_parm) <- performers
othercut = .35
subs = apply(hc_parm,1,quantile,probs=4/46) < othercut
sDmat = hc_parm[subs,subs]
nclusts = 4
sdends = sDmat %>% as.dist %>% hclust %>% as.dendrogram
clustered = data.frame(clust = as.factor(cutree(as.hclust(sdends), k = nclusts)),
performer = row.names(sDmat))
hc_parm = hc_parm %>% as_tibble(rownames = "performer") %>%
pivot_longer(-performer)
subs = as.vector(lower.tri(matrix(NA,length(performers),length(performers)),diag = TRUE))
hc_parm = hc_parm[subs,]
tt
clustered
?full_join
test = full_join(tt,clustered,by=c("name"="performer"))
test
tt = full_join(tt, clustered,by=c("name"="performer"))
tt[is.na(tt$clust),"clust"] = "other"
tt = temp %>% select(-meas_num, -beat) %>%
pivot_longer(-note_onset)
tt = full_join(tt, clustered,by=c("name"="performer")) %>%
mutate(clust = factor(labels = c(1:4,"other")))
tt = full_join(tt, clustered,by=c("name"="performer")) %>%
mutate(clust = factor(levels=c(1:4,NA),labels = c(1:4,"other")))
tt = full_join(tt, clustered,by=c("name"="performer"))
levels(tt$clust)
levels(tt$clust) = c(levels(tt$clust),"other")
tt$clust[is.na(tt$clust)] = "other"
tt
fivecolors = viridis(5, option='plasma',begin=.2)[c(1,4,2,5,3)]
ggplot(tt) +
geom_rect(data=data.frame(xmin = 33, xmax = 45, ymin = -Inf, ymax = Inf),
aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),
fill = 'gray90', color = 'gray90') +
geom_line(aes(y=value,x=note_onset,color=clust)) + th +
scale_color_manual(values = fivecolors) +
ylab("tempo (bpm)") + xlab("measure") +
theme(legend.position = "none")
ggplot(tt) +
geom_rect(data=data.frame(xmin = 33, xmax = 45, ymin = -Inf, ymax = Inf),
aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),
fill = 'gray90', color = 'gray90') +
geom_line(aes(y=value,x=note_onset,color=clust),size=.2,alpha=.2) +
th +
scale_color_manual(values = fivecolors) +
ylab("tempo (bpm)") + xlab("measure") +
theme(legend.position = "none")
ggplot(tt) +
geom_rect(data=data.frame(xmin = 33, xmax = 45, ymin = -Inf, ymax = Inf),
aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),
fill = 'gray90', color = 'gray90') +
geom_line(aes(y=value,x=note_onset,color=clust),size=.5,alpha=.5) +
th +
scale_color_manual(values = fivecolors) +
ylab("tempo (bpm)") + xlab("measure") +
theme(legend.position = "none")
ggplot(tt) +
geom_rect(data=data.frame(xmin = 33, xmax = 45, ymin = -Inf, ymax = Inf),
aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),
fill = 'gray90', color = 'gray90') +
geom_line(aes(y=value,x=note_onset,color=clust),size=.5,alpha=.3) +
th +
scale_color_manual(values = fivecolors) +
ylab("tempo (bpm)") + xlab("measure") +
theme(legend.position = "none")
ggplot(tt) +
geom_rect(data=data.frame(xmin = 33, xmax = 45, ymin = -Inf, ymax = Inf),
aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),
fill = 'gray90', color = 'gray90') +
geom_line(aes(y=value,x=note_onset,color=clust),size=.5,alpha=.2) +
th +
scale_color_manual(values = fivecolors) +
ylab("tempo (bpm)") + xlab("measure") +
theme(legend.position = "none")
tt
input = list()
input$perf="Richter 1976"
ggplot(tt) +
geom_rect(data=data.frame(xmin = 33, xmax = 45, ymin = -Inf, ymax = Inf),
aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),
fill = 'gray90', color = 'gray90') +
geom_line(aes(y=value,x=note_onset,color=clust),size=.5,alpha=.2) +
geom_line(data=select(tt, name==input$perf),
aes(y=value,x=note_onset,color=clust),size=2)+
th +
scale_color_manual(values = fivecolors) +
ylab("tempo (bpm)") + xlab("measure") +
theme(legend.position = "none")
tt
select(tt, name==input$perf)
?select
ggplot(tt) +
geom_rect(data=data.frame(xmin = 33, xmax = 45, ymin = -Inf, ymax = Inf),
aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),
fill = 'gray90', color = 'gray90') +
geom_line(aes(y=value,x=note_onset,color=clust),size=.5,alpha=.2) +
geom_line(data=filter(tt, name==input$perf),
aes(y=value,x=note_onset,color=clust),size=2)+
th +
scale_color_manual(values = fivecolors) +
ylab("tempo (bpm)") + xlab("measure") +
theme(legend.position = "none")
ggplot(tt) +
geom_rect(data=data.frame(xmin = 33, xmax = 45, ymin = -Inf, ymax = Inf),
aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),
fill = 'gray90', color = 'gray90') +
geom_line(aes(y=value,x=note_onset,color=clust),size=.5,alpha=.2) +
geom_line(data=filter(tt, name==input$perf),
aes(y=value,x=note_onset,color=clust),size=2)+
th +
scale_color_manual(values = fivecolors) +
ylab("tempo (bpm)") + xlab("measure") +
theme(legend.position = "right")
ggplot(tt) +
geom_rect(data=data.frame(xmin = 33, xmax = 45, ymin = -Inf, ymax = Inf),
aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),
fill = 'gray90', color = 'gray90') +
geom_line(aes(y=value,x=note_onset,color=clust),size=.5,alpha=.2) +
geom_line(data=filter(tt, name==input$perf),
aes(y=value,x=note_onset,color=clust),size=2)+
th +
scale_color_manual(values = fivecolors) +
ylab("tempo (bpm)") + xlab("measure") +
theme(legend.title = "cluster",legend.position = "right")
ggplot(tt) +
geom_rect(data=data.frame(xmin = 33, xmax = 45, ymin = -Inf, ymax = Inf),
aes(xmin=xmin,xmax=xmax,ymin=ymin,ymax=ymax),
fill = 'gray90', color = 'gray90') +
geom_line(aes(y=value,x=note_onset,color=clust),size=.5,alpha=.2) +
geom_line(data=filter(tt, name==input$perf),
aes(y=value,x=note_onset,color=clust),size=2)+
th +
scale_color_manual(values = fivecolors) +
ylab("tempo (bpm)") + xlab("measure") +
theme(legend.title = element_text("cluster"),
legend.position = "right")
?theme
runApp('perf-parameters.R')
?splitLayout
?plotOutput
runApp('perf-parameters.R')
hc_parm
runApp('perf-parameters.R')
runApp('perf-parameters.R')
runApp('perf-parameters.R')
runApp('perf-parameters.R')
rsconnect::setAccountInfo(name='dajmcdon', token='8CDE140DBF9FD4557ECAFD062A3350A5', secret='OFSwVWnQm42qwxN4hSSxGTyY6T3Jv/CUogSCwM0t')
700*4/3
700*16/9
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
dpf::musicModel()
dpf::musicModel
?musicModel
log10(11^231)
11^231
?heatmap.2
heatmap.2
fivecolors = c('#7b3294','#c2a5cf','#e7d4e8','#a6dba0','#008837')
xaringan:::inf_mr()
xaringan:::inf_mr()
library(shiny); runApp('ChopinMazurkaApp/ChopinMazurkaApp.R')
runApp('ChopinMazurkaApp/ChopinMazurkaApp.R')
?plotOutput
runApp('ChopinMazurkaApp/ChopinMazurkaApp.R')
?sidebarPanel
?selectInput
xaringan:::inf_mr()
?transmute
force(hc_parm)
max(hc_parm)
hc_parm[which.max(hc_parm)]
which.max(hc_parm)
which.max(hc_parm)/nrow(hc_parm)
which.max(hc_parm)%% nrow(hc_parm)
nrow(hc_parm)
hc_parm[14,45]
hc_parm[15,45]
colnames(hc_parm)
colnames(hc_parm)[45]
row.names(hc_parm)[15]
560/315
560/315*200
560/315*175
xaringan:::inf_mr()
?visOptions
visNetwork::visOptions
?visNetwork::visOptions
install.packages("widgetframe")
?frameWidget
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
servr::daemon_stop(3)
servr::daemon_stop(2)
servr::daemon_stop(1)
xaringan:::inf_mr()
?facet_grid
?facet_wrap
servr::daemon_stop(4)
xaringan:::inf_mr()
servr::daemon_stop(4)
servr::daemon_stop(3)
servr::daemon_stop(2)
servr::daemon_stop(1)
xaringan:::inf_mr()
library(visNetwork)
library(widgetframe)
tnodes = tibble(id=1:15,group=c(1,2,2,3,3,3,3,4,4,4,4,4,4,4,4),label="", shape="square")
tedges = tibble(from=rep(1:7,each=2),to=c(2:15))
vn = visNetwork(tnodes,tedges) %>%
visEdges(arrows = "to") %>%
visOptions(highlightNearest = list(enabled=TRUE,degree=list(to=4,from=0),algorithm="hierarchical")) %>%
visGroups(groupname='1',color=orange) %>% visGroups(groupname = '2',color=blue) %>% visGroups(groupname = '3',color=red) %>%
visGroups(groupname = '4',color=green)%>%
visHierarchicalLayout()
frameWidget(vn, height=400)
